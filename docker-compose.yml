version: '3'

networks:
  frontend:
    driver: ${NETWORKS_DRIVER}
  backend:
    driver: ${NETWORKS_DRIVER}

services:

### Workspace Utilities ##################################
  workspace:
    build: ./workspace
    environment:
      - PGDATABASE=${PGDATABASE}
      - PGUSER=${PGUSER}
      - PGPASSWORD=${PGPASSWORD}
      - POSTGRES_DB=${PGDATABASE}
      - POSTGRES_USER=${PGUSER}
      - POSTGRES_PASSWORD=${PGPASSWORD}
      - WORKSPACE_NCPU=${WORKSPACE_NCPU}
      - WORKSPACE_MEMORY=${WORKSPACE_MEMORY}
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
      - ${DATA_PATH_HOST}/pbf:${APP_CODE_PATH_CONTAINER}/pbf
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
    ports:
      - "${WORKSPACE_SSH_PORT}:22"
    tty: true
    networks:
      - frontend
      - backend

### Katotherian ##################################
  kartotherian:
    build: ./kartotherian
    ports:
      - "6533:6533"
      - "16534:16534"
    environment:
      - PGDATABASE=${PGDATABASE}
      - PGUSER=${PGUSER}
      - PGPASSWORD=${PGPASSWORD}
      - PGPORT=5432
      - PGHOST=postgres-postgis
      - CASSANDRA_HOST=cassandra
      - CASSANDRA_PORT=9042
    depends_on:
      - workspace
      - postgres-postgis
      - cassandra
      - redis
    volumes:
      - ${APP_CODE_PATH_HOST}/kartotherian-imposm3:/home/kartotherian
      - ${APP_CODE_PATH_HOST}/dependencies:/srv/dependencies
    tty: true
    networks:
      - frontend
      - backend

  ### Katotherian ##################################
  kartotherian-osm2pgsql:
    build: ./kartotherian
    ports:
      - "6534:6533"
      - "16535:16534"
    environment:
      - PGDATABASE=${PGDATABASE}
      - PGUSER=${PGUSER}
      - PGPASSWORD=${PGPASSWORD}
      - PGPORT=5432
      - PGHOST=postgres-postgis-osm2pgsql
      - CASSANDRA_HOST=cassandra-osm2pgsql
    depends_on:
      - workspace
      - postgres-postgis-osm2pgsql
      - cassandra
      - redis
    volumes:
      - ${APP_CODE_PATH_HOST}/kartotherian:/home/kartotherian
    tty: true
    networks:
      - frontend
      - backend

### PostgreSQL PostGis ##################################
  postgres-postgis:
    build: ./postgres-postgis
    volumes:
#      - ${DATA_PATH_HOST}/postgres:/var/lib/postgresql/data
      - ${DATA_PATH_HOST}/imposm:/var/lib/postgresql/data
    ports:
      - "${PGPORT}:5432"
    environment:
      - PGDATABASE=${PGDATABASE}
      - PGUSER=${PGUSER}
      - PGPASSWORD=${PGPASSWORD}
      - POSTGRES_DB=${PGDATABASE}
      - POSTGRES_USER=${PGUSER}
      - POSTGRES_PASSWORD=${PGPASSWORD}
    depends_on:
      - workspace
    networks:
      - backend

  postgres-postgis-osm2pgsql:
    build: ./postgres-postgis
    volumes:
      - ${DATA_PATH_HOST}/postgres:/var/lib/postgresql/data
#      - ${DATA_PATH_HOST}/imposm:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    environment:
      - PGDATABASE=${PGDATABASE}
      - PGUSER=${PGUSER}
      - PGPASSWORD=${PGPASSWORD}
      - POSTGRES_DB=${PGDATABASE}
      - POSTGRES_USER=${PGUSER}
      - POSTGRES_PASSWORD=${PGPASSWORD}
    depends_on:
      - workspace
    networks:
      - backend

  ### Cassandra ##################################
  cassandra:
    build: ./cassandra
    volumes:
      - ${DATA_PATH_HOST}/cassandra:/var/lib/cassandra
    ports:
      - "${CASSANDRA_PORT}:9042"
    networks:
      - backend

  ### Cassandra ##################################
  cassandra-osm2pgsql:
    build: ./cassandra
    volumes:
      - ${DATA_PATH_HOST}/cassandra-osm2pgsql:/var/lib/cassandra
    ports:
      - "9043:9042"
    networks:
      - backend

### Redis ##################################
  redis:
    build: ./redis
    volumes:
        - ${DATA_PATH_HOST}/redis:/data
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - backend

### Mapbox Studio Classic ##################################
  mapbox-studio-classic:
    build: ./mapbox-studio-classic
    volumes:
      - ${APP_CODE_PATH_HOST}:/root/source
      - ${DATA_PATH_HOST}/.mapbox-studio:/root/.mapbox-studio
    ports:
      - "3000:3000"
    depends_on:
      - workspace
      - postgres-postgis
    environment:
      - DOCKER_HOST_IP=${DOCKER_HOST_IP}
    networks:
      - frontend
      - backend
### Graphite statsd ##################################
  statsd:
    image: graphiteapp/graphite-statsd
    # volumes:
    #   - ${DATA_PATH_HOST}/graphite/configs:/opt/graphite/conf
    #   - ${DATA_PATH_HOST}/graphite/data:/opt/graphite/storage
    #   - ${DATA_PATH_HOST}/statsd:/opt/statsd
    ports:
      - "8000:80"
      - "2003-2004:2003-2004"
      - "2023-2024:2023-2024"
      - "8125:8125"
      - "8126:8126"
    restart: always
    networks:
      - backend


### Maputnik?? ################################## 
